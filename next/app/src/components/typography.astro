---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'span'> & {
  variant: 'h1' | 'h2' | 'h3' | 'p' | 'lead' | 'link' | 'small';
  color?: 'default' | 'violet' | 'aquamarine';
}

const { 
  variant, 
  class: className,
  color = 'default',
  ...p 
} = Astro.props;
---
<span class:list={[variant, className, `color-${color}`]} {...p}>
  <slot />
</span>

<style>
  .h1 {
    font-size:  2.25rem;
    line-height: calc(2.5 / 2.25);
    font-weight: 700;
    letter-spacing: -0.025em;
  }
  .h2 {
    font-size: 1.875rem;
    line-height: calc(2.25 / 1.875);
    font-weight: 600;
    letter-spacing: -0.025em;
  }
  .h3 {
    font-size: 1.5rem;
    line-height: calc(2 / 1.5);
    font-weight: 600;
  }
  .p {
    font-size: 1rem;
    line-height: 1.5;
    line-height: 1.75;
  }
  .lead {
    font-size: 1.125rem;
    line-height: calc(1.75 / 1.125);
  }
  .link {
    color: var(--color-fuchsia-500);
    font-weight: 500;
    text-decoration: underline;
    text-underline-offset: 2px;

    &:hover {
      color: var(--color-french-violet-700);

      @media (prefers-color-scheme: dark) { 
        color: var(--color-azure-400);
      }
    }
  }  
  .small {
    font-size: 0.875rem;
    line-height: calc(1.25 / 0.875);
  }

  .color-default {

  }

  .color-violet {
    color: var(--color-french-violet-500);
    @media (prefers-color-scheme: dark) { 
      color: var(--color-french-violet-300);
    }
  }

  .color-aquamarine {
    color: var(--color-aquamarine-700);
    @media (prefers-color-scheme: dark) { 
      color: var(--color-aquamarine-500);
    }
  }

</style>

